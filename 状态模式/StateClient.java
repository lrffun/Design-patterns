package 状态模式;
/*状态（State）模式的定义：对有状态的对象，把复杂的“判断逻辑”提取到不同的状态对象中，允许状态对象在其内部状态发生改变时改变其行为。
 * 模式结构：
 * 		1、环境（Context）角色：也称为上下文，它定义了客户感兴趣的接口，维护一个当前状态，并将与状态相关的操作委托给当前状态对象来处理。
 * 		2、抽象状态（State）角色：定义一个接口，用以封装环境对象中的特定状态所对应的行为。
 * 		3、具体状态（Concrete    State）角色：实现抽象状态所对应的行为。
 * 
 */
public class StateClient {
	public static void main(String[] args) {
		Context context = new Context();
		context.Handle();
		context.Handle();
		context.Handle();
		context.Handle();
		context.Handle();
	}
}
